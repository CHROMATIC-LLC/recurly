<?php

/**
 * @file
 * Uses Recurly.js to provide a Form API field to subscribe to a service.
 */

/**
 * Implements hook_menu().
 */
function recurlyjs_menu() {
  $items = array();

  // Configure built-in pages if enabled.
  $entity_type = variable_get('recurly_entity_type', 'user');
  if ($entity_type && variable_get('recurly_pages', '1')) {
    $entity_info = entity_get_info();
    $bundle = variable_get('recurly_bundle_' . $entity_type, NULL);
    $bundle = empty($bundle) ? $entity_type : $bundle;

    $entity_path = $entity_type . '/%' . $entity_type;
    $items[$entity_path . '/subscription/billing'] = array(
      'title' => 'Update billing information',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('recurlyjs_update_billing_form', $entity_type, 1),
      'access callback' => 'recurly_subscription_page_access',
      'access arguments' => array($entity_type, 1, 'update_billing'),
      'type' => MENU_LOCAL_TASK,
      'weight' => 4,
      'file' => 'includes/recurlyjs.pages.inc',
    );

    $items[$entity_path . '/subscription/signup/%'] = array(
      'title' => 'Signup',
      'page callback' => 'recurlyjs_subscribe_page',
      'page arguments' => array($entity_type, 1, 4),
      'access callback' => 'recurly_subscription_page_access',
      'access arguments' => array($entity_type, 1, 'signup'),
      'type' => MENU_CALLBACK,
      'file' => 'includes/recurlyjs.pages.inc',
    );
  }

  return $items;
}

/**
 * Implements hook_recurly_url_info().
 */
function recurlyjs_recurly_url_info($operation, $context) {
  switch ($operation) {
    case 'update_billing':
      $entity_info = recurly_account_load(array('account_code' => $context['account']->account_code), TRUE);
      return url($entity_info->entity_type . '/' . $entity_info->entity_id . '/subscription/billing');

    case 'subscribe':
      list($id, $vid, $bundle) = entity_extract_ids($context['entity_type'], $context['entity']);
      $currency_string = !isset($context['currency']) || $context['currency'] == variable_get('recurly_default_currency', 'USD') ? '' : '/' . $context['currency'];
      watchdog('recurly', 'subscribe');

      return url($context['entity_type'] . '/' . $id . '/subscription/signup/' . $context['plan_code'] . $currency_string);
  }
}

/**
 * Implements hook_theme().
 */
function recurlyjs_theme() {
  $items['recurlyjs'] = array(
    'render element' => 'element',
    'pattern' => 'recurlyjs__',
    'template' => 'templates/recurlyjs',
  );
  $items['recurlyjs_update_billing'] = array(
    'render element' => 'form',
    'template' => 'templates/recurlyjs-update-billing',
  );
  $items['recurlyjs_subscribe_page'] = array(
    'variables' => array('form' => NULL),
    'template' => 'templates/recurlyjs-subscribe-page',
  );
  return $items;
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function recurlyjs_form_recurly_settings_form_alter(&$form, &$form_state) {
  module_load_include('inc', 'recurlyjs', 'includes/recurlyjs.pages');
  _recurlyjs_form_recurly_settings_form_alter($form, $form_state);
}

/**
 * FormAPI #process callback for the recurlyjs_subscription element type.
 */
function recurlyjs_element_subscription_expand($element) {
  // Keys within the subscription object.
  // http://docs.recurly.com/api/recurlyjs/reference#subscription-object
  $subscription_keys = array(
    'plan_code' => NULL,
    'trial_ends_at' => NULL,
    'starts_at' => NULL,
    'total_billing_cylces' => NULL,
    'first_renewal_date' => NULL,
  );
  $options['subscription'] = array();
  foreach ($subscription_keys as $form_key => $jsonKey) {
    if (isset($element['#' . $form_key])) {
      $options['subscription'][$form_key] = $element['#' . $form_key];
    }
  }
  $element['#signing_options'] = $options;
  return $element;
}

/**
 * FormAPI #process callback for the recurlyjs_billing element type.
 */
function recurlyjs_element_billing_expand($element) {
  $options['account']['account_code'] = $element['#account_code'];
  $element['#signing_options'] = $options;
  return $element;
}

/**
 * FormAPI #process callback for the recurlyjs_transaction element type.
 */
function recurlyjs_element_transaction_expand($element) {
  $options['transaction']['amount_in_cents'] = $element['#amount'];
  $options['transaction']['currency'] = $element['#currency'];
  $element['#signing_options'] = $options;
  return $element;
}

/**
 * FormAPI #process callback for the recurlyjs element type.
 */
// function recurlyjs_element_expand($element) {
//   recurly_client_initialize();

//   $recurly_public_key = variable_get('recurly_public_key', '');

//   // Add Recurly.js and the inline code to the page.
//   $element['#attached']['js'][] = 'https://js.recurly.com/v3/recurly.js';
//   $element['#attached']['js'][] = drupal_get_path('module', 'recurlyjs') . '/recurly-element.js';
//   $element['#attached']['js'][] = array(
//     'type' => 'inline',
//     'data' => "recurly.configure('$recurly_public_key');",
//   );

//   // Convenience CSS file location option.
//   if (isset($element['#recurly_css'])) {
//     $element['#attached']['css'][] = $element['#recurly_css'];
//   }
//   return $element;
// }
