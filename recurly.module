<?php

/**
 * @file
 * Uses Recurly's PHP client library to interact with their API and integrate it
 * with Drupal user accounts.
 */


/**
 * Implements hook_menu().
 */
function recurly_menu() {
  $items = array();

  $items['admin/config/services/recurly'] = array(
    'title' => 'Recurly',
    'description' => 'Configure your Recurly API settings and points of integration with Drupal.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('recurly_settings_form'),
    'access arguments' => array('administer recurly'),
    'file' => 'includes/recurly.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function recurly_permission() {
  $permissions = array(
    'administer recurly' => array(
      'title' => t('Administer Recurly'),
      'description' => t('Allows users to configure site-wide Recurly API settings and points of integration.'),
      'restrict access' => TRUE,
    ),
  );

  return $permissions;
}

/**
 * Returns a Recurly API client for use with authentication settings included.
 *
 * @param $username
 *   The API username to use.
 * @param $password
 *   The API password for the given username.
 * @param $subdomain
 *   The subdomain configured for your Recurly account.
 * @param $environment
 *   The current environment of the given account, either 'sandbox' or 'production'.
 *
 * @return
 *   A Recurly client object or FALSE if it could not be initialized.
 */
function recurly_client($username, $password, $subdomain, $environment) {
  $client = NULL;

  // If we can find a path in the libraries directory to the Recurly PHP client
  // library...
  if ($path = libraries_get_path('recurly')) {
    // Include the library files.
    require_once $path . '/library/recurly.php';

    // Initialize a new client object.
    $client = new RecurlyClient;
    $client->SetAuth($username, $password, $subdomain, $environment);
  }

  // If we successfully initialized the client, return it now.
  if (!empty($client)) {
    return $client;
  }

  return FALSE;
}
